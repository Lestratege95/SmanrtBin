# Generated by Django 4.2.7 on 2025-05-24 14:14

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ImpactReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period", models.DateField()),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Quotidien"),
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=10,
                    ),
                ),
                ("total_recycled", models.FloatField(help_text="Total recyclé en kg")),
                ("co2_saved", models.FloatField(help_text="CO2 économisé en kg")),
                ("active_bins", models.IntegerField()),
                ("collection_count", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ModulePermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module", models.CharField(max_length=50)),
                ("permission", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "unique_together": {("module", "permission")},
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("tmoney", "TMoney"),
                            ("flooz", "Flooz"),
                            ("card", "Carte Bancaire"),
                            ("bank_transfer", "Virement Bancaire"),
                        ],
                        max_length=20,
                    ),
                ),
                ("account_number", models.CharField(max_length=100)),
                ("is_default", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PaymentPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Mensuel"),
                            ("quarterly", "Trimestriel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("features", models.JSONField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SmartBin",
            fields=[
                (
                    "id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("location", models.CharField(max_length=200)),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("fill_level", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("maintenance", "En maintenance"),
                            ("inactive", "Inactive"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("last_collection", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="TriCenter",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("address", models.TextField()),
                ("gps_lat", models.FloatField()),
                ("gps_lng", models.FloatField()),
                ("email_contact", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=20)),
                ("total_capacity", models.IntegerField(help_text="Capacité en kg")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("collector", "Collecteur"),
                            ("citizen", "Citoyen"),
                            ("tri_center", "Centre de tri"),
                            ("tri_agent", "Agent de tri"),
                            ("supervisor", "Superviseur"),
                            ("partner", "Partenaire"),
                        ],
                        default="citizen",
                        max_length=20,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="custom_user_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="WasteFlow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "processing_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "waste_type",
                    models.CharField(
                        choices=[
                            ("plastic", "Plastique"),
                            ("glass", "Verre"),
                            ("paper", "Papier"),
                            ("metal", "Métal"),
                            ("organic", "Organique"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity_kg", models.FloatField()),
                (
                    "recycling_rate",
                    models.FloatField(help_text="Taux de valorisation en %"),
                ),
                ("anomaly_detected", models.BooleanField(default=False)),
                ("comment", models.TextField(blank=True)),
                (
                    "smart_bin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.smartbin",
                    ),
                ),
                (
                    "tri_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.tricenter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Valorization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity_kg", models.FloatField()),
                ("price_per_kg", models.FloatField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("in_progress", "En cours"),
                            ("completed", "Terminée"),
                            ("cancelled", "Annulée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "partner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.user",
                    ),
                ),
                (
                    "waste_flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.wasteflow",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("admin", "Administrateur"),
                            ("collector", "Collecteur"),
                            ("tri_agent", "Agent de tri"),
                            ("supervisor", "Superviseur"),
                            ("partner", "Partenaire"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("permissions", models.ManyToManyField(to="smartbin.modulepermission")),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("adresse", models.CharField(blank=True, max_length=255)),
                ("bio", models.TextField(blank=True)),
                ("date_naissance", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profil",
                        to="smartbin.user",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="user_role",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="smartbin.userrole",
            ),
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("pending", "En attente"),
                            ("cancelled", "Annulée"),
                            ("expired", "Expirée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("auto_renew", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment_method",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.paymentmethod",
                    ),
                ),
                (
                    "payment_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="smartbin.paymentplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="smartbin.user"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="smartbin",
            name="zone",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="smartbin.zone",
            ),
        ),
        migrations.AddField(
            model_name="paymentmethod",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="smartbin.user"
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Complété"),
                            ("failed", "Échoué"),
                            ("refunded", "Remboursé"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("transaction_id", models.CharField(max_length=100, unique=True)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "payment_method",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.paymentmethod",
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.subscription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Complété"),
                            ("failed", "Échoué"),
                            ("refunded", "Remboursé"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("tax_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("pdf_file", models.FileField(upload_to="invoices/")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.payment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CollectionRoute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("scheduled_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("in_progress", "En cours"),
                            ("completed", "Terminée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("bins", models.ManyToManyField(to="smartbin.smartbin")),
                (
                    "collector",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "bin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.smartbin",
                    ),
                ),
                (
                    "collector",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BinReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("broken", "Cassé"),
                            ("full", "Plein"),
                            ("empty", "Vide"),
                            ("other", "Autre"),
                        ],
                        default="FULL",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("completed", "Terminée"),
                            ("failed", "Échoué"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "bin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.smartbin",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smartbin.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signalement de poubelle",
                "verbose_name_plural": "Signalements de poubelles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=50)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("medium", "Moyenne"),
                            ("high", "Haute"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("is_resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "bin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.smartbin",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="paymentmethod",
            unique_together={("user", "payment_type", "account_number")},
        ),
        migrations.CreateModel(
            name="CenterStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period", models.DateField()),
                (
                    "period_type",
                    models.CharField(
                        choices=[("monthly", "Mensuel"), ("yearly", "Annuel")],
                        max_length=10,
                    ),
                ),
                ("total_received", models.FloatField(help_text="Total reçu en kg")),
                ("total_recycled", models.FloatField(help_text="Total recyclé en kg")),
                ("collection_count", models.IntegerField()),
                (
                    "tri_center",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smartbin.tricenter",
                    ),
                ),
            ],
            options={
                "unique_together": {("tri_center", "period", "period_type")},
            },
        ),
    ]
